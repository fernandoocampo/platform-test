# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2


dist: artifacts
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...

builds:
  - id: example-build-1
    main: ./cmd/platformtestd
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commitHash={{.ShortCommit}} -X main.buildDate={{.Date}}"
    goarch:
      - amd64
      - arm64
  - id: example-build-2
    main: ./cmd/platformtestd
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commitHash={{.ShortCommit}} -X main.buildDate={{.Date}}"
    goarch:
      - amd64
      - arm64
    binary: "{{ .ProjectName }}-{{ .Os }}-{{ .Arch }}"
    no_unique_dist_dir: true
archives:
  - id: example-build-1
    format: binary
  - id: example-build-2
    format: binary
    builds:
      - example-build-2
    wrap_in_directory: false
    name_template: "{{ .Binary }}"
# archives:
#   - formats: [tar.gz]
#     # this name template makes the OS and Arch compatible with the results of `uname`.
#     name_template: >-
#       {{ .ProjectName }}_
#       {{- title .Os }}_
#       {{- if eq .Arch "amd64" }}x86_64
#       {{- else if eq .Arch "386" }}i386
#       {{- else }}{{ .Arch }}{{ end }}
#       {{- if .Arm }}v{{ .Arm }}{{ end }}
#     # use zip for windows archives
#     format_overrides:
#       - goos: windows
#         formats: [zip]

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

release:
  footer: >-

    ---

    Released by [GoReleaser](https://github.com/goreleaser/goreleaser).
